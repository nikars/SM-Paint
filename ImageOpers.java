/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImageOpers.java
 *
 * Created on 16-ene-2012, 21:06:20
 */
package smpaint_3;

import java.awt.Graphics2D;
import java.awt.color.ColorSpace;
import java.awt.color.ICC_ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.geom.AffineTransform;
import java.awt.image.*;

/**
 * Panel de operaciónes sobre imágenes
 * @author Nikolai
 */
public class ImageOpers extends javax.swing.JPanel {
    //Variables
    private MainWindow padre;
    
    //Constructores
    /** Inicializa el panel
     * @param padre MainWindow
     */
    public ImageOpers(javax.swing.JFrame padre) {
        initComponents();
        
        this.padre=(MainWindow)padre;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        moreContrastButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        invertButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        bwButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        blurButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        focusButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        frontButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        smallButton = new javax.swing.JButton();
        rotateButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        brightSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        restoreButon = new javax.swing.JButton();
        commitButton = new javax.swing.JButton();

        jButton1.setText("jButton1");

        moreContrastButton.setText("Aumentar Contraste");
        moreContrastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moreContrastButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(moreContrastButton, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addGap(69, 69, 69))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(moreContrastButton, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Contraste", jPanel2);

        invertButton.setText("Invertir Imagen");
        invertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invertButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(invertButton, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addGap(84, 84, 84))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(invertButton, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Negativo", jPanel3);

        bwButton.setText("Desaturar Imagen");
        bwButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bwButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(bwButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(83, 83, 83))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bwButton, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Convertir a niveles de gris", jPanel4);

        blurButton.setText("Suavizar Imagen");
        blurButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blurButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(blurButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(87, 87, 87))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(blurButton, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Alisamiento", jPanel5);

        focusButton.setText("Enfocar Imagen");
        focusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                focusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(focusButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(129, 129, 129))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(focusButton, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Realze", jPanel6);

        frontButton.setText("Detectar Fronteras");
        frontButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frontButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(frontButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(80, 80, 80))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(frontButton, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Fronteras", jPanel7);

        smallButton.setText("Agrandar Imagen");
        smallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smallButtonActionPerformed(evt);
            }
        });

        rotateButton.setText("Rotar Imagen");
        rotateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(smallButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rotateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(59, 59, 59))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(smallButton, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(rotateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Transf.", jPanel8);

        brightSlider.setMaximum(1000);
        brightSlider.setMinimum(100);
        brightSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                brightSliderStateChanged(evt);
            }
        });

        jLabel1.setText("-");

        jLabel2.setText("+");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(brightSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(brightSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        jTabbedPane1.addTab("Brillo", jPanel1);

        restoreButon.setText("Restaurar");
        restoreButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreButonActionPerformed(evt);
            }
        });

        commitButton.setText("Aplicar");
        commitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(restoreButon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(commitButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(restoreButon)
                    .addComponent(commitButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void brightSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_brightSliderStateChanged
        // TODO add your handling code here:
        if(padre.GetSelectedWindow() != null){
            BufferedImage imgSource, img;
            img = ((Lienzo)padre.GetSelectedWindow().GetContentReference()).GetImage();
            if (img.getType() != BufferedImage.TYPE_INT_RGB) {
                    imgSource = new BufferedImage(img.getWidth(),img.getHeight(), 
                                                    BufferedImage.TYPE_INT_RGB);
                    Graphics2D g2d = imgSource.createGraphics();
                    g2d.drawImage(img, 0, 0, null);
            }else imgSource = img;
            float factor = brightSlider.getValue();

            RescaleOp rop = new RescaleOp(factor/100,0F,null);
            BufferedImage imgdest = rop.filter( imgSource, null);
            ((Lienzo)padre.GetSelectedWindow().GetContentReference()).SetImg(imgdest);
        }
    }//GEN-LAST:event_brightSliderStateChanged

        private void moreContrastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moreContrastButtonActionPerformed
        // TODO add your handling code here
        double f=0;
        double K1 = 255.0/Math.log(256.0);
        double K2 = 255.0/Math.pow(255.0,0.40);
        double K3 = 255.0 / (   1.0 / (  1.0  +  Math.pow( 128.0/255.0 , 2.0)));
        short ltN[] = new short[256];
        short ltL[] = new short[256];
        short ltG[] = new short[256];
        short ltC[] = new short[256];
        
        for (int j=0; j<256; j++) {
            ltN[j] = (short)(256-j-1); // Negativo
            ltL[j] = (byte)(K1*Math.log(1.0+(double)j)); // Logaritmo
            ltG[j] = (byte)(K2*Math.pow((double)j,0.40));// Gamma
            if(j==0) ltC[j]=0;
            else {
                f = 1.0 / (1.0 + Math.pow(128.0 / (float) j, 2.0));  // Contraste
                ltC[j] = (short)(K3*f);
            }
            
            if(padre.GetSelectedWindow() != null){
                BufferedImage imgSource, img;
                img = ((Lienzo)padre.GetSelectedWindow().GetContentReference()).GetImage();
                if (img.getType() != BufferedImage.TYPE_INT_RGB) {
                        imgSource = new BufferedImage(img.getWidth(),img.getHeight(), 
                                                        BufferedImage.TYPE_INT_RGB);
                        Graphics2D g2d = imgSource.createGraphics();
                        g2d.drawImage(img, 0, 0, null);
                }else imgSource = img;
      
                ShortLookupTable slt = new ShortLookupTable(0, ltC);
                LookupOp lop = new LookupOp(slt, null);
                BufferedImage imgdest = lop.filter( imgSource , null); 
                ((Lienzo)padre.GetSelectedWindow().GetContentReference()).SetImg(imgdest);
              }
        }
    }//GEN-LAST:event_moreContrastButtonActionPerformed

    private void invertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invertButtonActionPerformed
        // TODO add your handling code here:
        double f=0,f2=0;
        double K1 = 255.0/Math.log(256.0);
        double K2 = 255.0/Math.pow(255.0,0.40);
        double K3 = 255.0 / (   1.0 / (  1.0  +  Math.pow( 128.0/255.0 , 2.0)));
        short ltN[] = new short[256];
        short ltL[] = new short[256];
        short ltG[] = new short[256];
        short ltC[] = new short[256];
        
        for (int j=0; j<256; j++) {
            ltN[j] = (short)(256-j-1); // Negativo
            ltL[j] = (byte)(K1*Math.log(1.0+(double)j)); // Logaritmo
            ltG[j] = (byte)(K2*Math.pow((double)j,0.40));// Gamma
            if(j==0) ltC[j]=0;
            else {
                f = 1.0 / (1.0 + Math.pow(128.0 / (float) j, 2.0));  // Contraste
                ltC[j] = (short)(K3*f);
            }
   
            if(padre.GetSelectedWindow() != null){
                BufferedImage imgSource, img;
                img = ((Lienzo)padre.GetSelectedWindow().GetContentReference()).GetImage();
                if (img.getType() != BufferedImage.TYPE_INT_RGB) {
                        imgSource = new BufferedImage(img.getWidth(),img.getHeight(), 
                                                        BufferedImage.TYPE_INT_RGB);
                        Graphics2D g2d = imgSource.createGraphics();
                        g2d.drawImage(img, 0, 0, null);
                }else imgSource = img;

                ShortLookupTable slt = new ShortLookupTable(0, ltN);
                LookupOp lop = new LookupOp(slt, null);
                BufferedImage imgdest = lop.filter( imgSource , null); 
                ((Lienzo)padre.GetSelectedWindow().GetContentReference()).SetImg(imgdest);
            }
 }
    }//GEN-LAST:event_invertButtonActionPerformed

    private void bwButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bwButtonActionPerformed
        // TODO add your handling code here:
        if(padre.GetSelectedWindow() != null){
            BufferedImage imgSource, img;
            img = ((Lienzo)padre.GetSelectedWindow().GetContentReference()).GetImage();
            if (img.getType() != BufferedImage.TYPE_INT_RGB) {
                    imgSource = new BufferedImage(img.getWidth(),img.getHeight(), 
                                                    BufferedImage.TYPE_INT_RGB);
                    Graphics2D g2d = imgSource.createGraphics();
                    g2d.drawImage(img, 0, 0, null);
            }else imgSource = img;

        ICC_Profile ip = ICC_Profile.getInstance(ColorSpace.CS_GRAY);
        ColorSpace cs = new ICC_ColorSpace(ip);
        ColorConvertOp ccop = new ColorConvertOp(cs,null);
        BufferedImage imgdest = ccop.filter(imgSource,null);
        
        ((Lienzo)padre.GetSelectedWindow().GetContentReference()).SetImg(imgdest);
        }
    }//GEN-LAST:event_bwButtonActionPerformed

    private void blurButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blurButtonActionPerformed
        // TODO add your handling code here:
        float filtroMedia[] = {
                    0.1f, 0.1f, 0.1f,
                    0.1f, 0.2f, 0.1f,
                    0.1f, 0.1f, 0.1f
                    };

        // Aplicación del filtro
        if(padre.GetSelectedWindow() != null){
            BufferedImage imgSource, img;
            img = ((Lienzo)padre.GetSelectedWindow().GetContentReference()).GetImage();
            if (img.getType() != BufferedImage.TYPE_INT_RGB) {
                    imgSource = new BufferedImage(img.getWidth(),img.getHeight(), 
                                                    BufferedImage.TYPE_INT_RGB);
                    Graphics2D g2d = imgSource.createGraphics();
                    g2d.drawImage(img, 0, 0, null);
            }else imgSource = img;

            Kernel k = new Kernel(3,3,filtroMedia);
            ConvolveOp cop = new ConvolveOp( k );
            BufferedImage imgdest = cop.filter(imgSource,null);
            ((Lienzo)padre.GetSelectedWindow().GetContentReference()).SetImg(imgdest);
        }
    }//GEN-LAST:event_blurButtonActionPerformed

    private void focusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_focusButtonActionPerformed
        // TODO add your handling code here:
        float filtroRealce[] = {
                    0.0f, -1.0f, 0.0f,
                    -1.0f,  5.0f, -1.0f,
                    0.0f, -1.0f, 0.0f
                    };

        // Aplicación del filtro
        if(padre.GetSelectedWindow() != null){
            BufferedImage imgSource, img;
            img = ((Lienzo)padre.GetSelectedWindow().GetContentReference()).GetImage();
            if (img.getType() != BufferedImage.TYPE_INT_RGB) {
                    imgSource = new BufferedImage(img.getWidth(),img.getHeight(), 
                                                    BufferedImage.TYPE_INT_RGB);
                    Graphics2D g2d = imgSource.createGraphics();
                    g2d.drawImage(img, 0, 0, null);
            }else imgSource = img;

            Kernel k = new Kernel(3,3,filtroRealce);
            ConvolveOp cop = new ConvolveOp( k );
            BufferedImage imgdest = cop.filter(imgSource,null);
            ((Lienzo)padre.GetSelectedWindow().GetContentReference()).SetImg(imgdest);
        }
    }//GEN-LAST:event_focusButtonActionPerformed

    private void frontButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frontButtonActionPerformed
        // TODO add your handling code here:
        float filtroLaplaciano[] = {
                    1.0f, 1.0f,  1.0f,
                    1.0f, -8.0f, 1.0f,
                    1.0f, 1.0f,  1.0f
                    };

        // Aplicación del filtro
        if(padre.GetSelectedWindow() != null){
            BufferedImage imgSource, img;
            img = ((Lienzo)padre.GetSelectedWindow().GetContentReference()).GetImage();
            if (img.getType() != BufferedImage.TYPE_INT_RGB) {
                    imgSource = new BufferedImage(img.getWidth(),img.getHeight(), 
                                                    BufferedImage.TYPE_INT_RGB);
                    Graphics2D g2d = imgSource.createGraphics();
                    g2d.drawImage(img, 0, 0, null);
            }else imgSource = img;
     
        Kernel k = new Kernel(3,3,filtroLaplaciano);
        ConvolveOp cop = new ConvolveOp( k );
        BufferedImage imgdest = cop.filter(imgSource,null);
        ((Lienzo)padre.GetSelectedWindow().GetContentReference()).SetImg(imgdest);
        }
    }//GEN-LAST:event_frontButtonActionPerformed

    private void restoreButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreButonActionPerformed
        // TODO add your handling code here:
        ((Lienzo)padre.GetSelectedWindow().GetContentReference()).RestoreOper();
        brightSlider.setValue(100);
    }//GEN-LAST:event_restoreButonActionPerformed

    private void commitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitButtonActionPerformed
        // TODO add your handling code here:
        ((Lienzo)padre.GetSelectedWindow().GetContentReference()).ApplyOper();
    }//GEN-LAST:event_commitButtonActionPerformed

    private void smallButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smallButtonActionPerformed
        // TODO add your handling code here:
        //at = AffineTransform.getShearInstance(0.5,0.0);
        //at = AffineTransform.getTranslateInstance(20.0,20.0);
        
        if(padre.GetSelectedWindow() != null){
            BufferedImage imgSource, img;
            img = ((Lienzo)padre.GetSelectedWindow().GetContentReference()).GetImage();
            if (img.getType() != BufferedImage.TYPE_INT_RGB) {
                    imgSource = new BufferedImage(img.getWidth(),img.getHeight(), 
                                                    BufferedImage.TYPE_INT_RGB);
                    Graphics2D g2d = imgSource.createGraphics();
                    g2d.drawImage(img, 0, 0, null);
            }else imgSource = img;
     
        AffineTransform at = AffineTransform.getScaleInstance(1.25, 1.25);
        AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
        BufferedImage imgdest = atop.filter(imgSource,null);
        ((Lienzo)padre.GetSelectedWindow().GetContentReference()).SetImg(imgdest);
        }
    }//GEN-LAST:event_smallButtonActionPerformed

    private void rotateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotateButtonActionPerformed
        // TODO add your handling code here:
        if(padre.GetSelectedWindow() != null){
            BufferedImage imgSource, img;
            img = ((Lienzo)padre.GetSelectedWindow().GetContentReference()).GetImage();
            if (img.getType() != BufferedImage.TYPE_INT_RGB) {
                    imgSource = new BufferedImage(img.getWidth(),img.getHeight(), 
                                                    BufferedImage.TYPE_INT_RGB);
                    Graphics2D g2d = imgSource.createGraphics();
                    g2d.drawImage(img, 0, 0, null);
            }else imgSource = img;
     
            AffineTransform at = AffineTransform.getRotateInstance(Math.toRadians(180.0), imgSource.getWidth()/2,imgSource.getHeight()/2);
            AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
            BufferedImage imgdest = atop.filter(imgSource,null);
            ((Lienzo)padre.GetSelectedWindow().GetContentReference()).SetImg(imgdest);
        }
    }//GEN-LAST:event_rotateButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton blurButton;
    private javax.swing.JSlider brightSlider;
    private javax.swing.JButton bwButton;
    private javax.swing.JButton commitButton;
    private javax.swing.JButton focusButton;
    private javax.swing.JButton frontButton;
    private javax.swing.JButton invertButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton moreContrastButton;
    private javax.swing.JButton restoreButon;
    private javax.swing.JButton rotateButton;
    private javax.swing.JButton smallButton;
    // End of variables declaration//GEN-END:variables
}
